import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import butter, filtfilt


np.random.seed(42)
aqi_readings = np.random.normal(loc=50, scale=10, size=1440) 

aqi_readings += np.random.normal(loc=0, scale=20, size=1440)

def apply_low_pass_filter(data, cutoff_freq=0.1, order=2):
    b, a = butter(order, cutoff_freq, btype='low', analog=False)
    smoothed_data = filtfilt(b, a, data)
    return smoothed_data

smoothed_aqi = apply_low_pass_filter(aqi_readings)


def compute_hourly_averages(data):
    return np.mean(data.reshape(-1, 60), axis=1)

hourly_averages = compute_hourly_averages(smoothed_aqi)

plt.figure(figsize=(10, 6))
time = np.arange(1440) 

plt.plot(time, aqi_readings, label="Original Noisy AQI", alpha=0.5)
plt.plot(time, smoothed_aqi, label="Smoothed AQI", color="green", linewidth=2)
plt.plot(np.arange(0, 1440, 60), hourly_averages, label="Hourly Averages", marker="o", color="red", linestyle="--")

plt.xlabel('Time (minutes)')
plt.ylabel('AQI')
plt.title('AQI Analysis: Noisy vs Smoothed Data')
plt.legend()
plt.grid(True)
plt.show()

def highlight_high_aqi_intervals(data, threshold=100, duration=15):
    above_threshold = np.where(data > threshold)[0]
    highlighted_intervals = []
    
    consecutive_count = 0
    start_index = None
    
    for i in range(1, len(above_threshold)):
        if above_threshold[i] == above_threshold[i-1] + 1:
            if consecutive_count == 0:
                start_index = above_threshold[i-1]
            consecutive_count += 1
        else:
            if consecutive_count >= duration:
                highlighted_intervals.append((start_index, above_threshold[i-1]))
            consecutive_count = 0
    
    return highlighted_intervals

intervals = highlight_high_aqi_intervals(smoothed_aqi)


plt.figure(figsize=(10, 6))
plt.plot(time, smoothed_aqi, label="Smoothed AQI", color="green", linewidth=2)

for start, end in intervals:
    plt.axvspan(start, end, color="red", alpha=0.3, label="High AQI Interval" if start == intervals[0][0] else "")

plt.xlabel('Time (minutes)')
plt.ylabel('AQI')
plt.title('Smoothed AQI with High AQI Intervals Highlighted')
plt.legend()
plt.grid(True)
plt.show()
